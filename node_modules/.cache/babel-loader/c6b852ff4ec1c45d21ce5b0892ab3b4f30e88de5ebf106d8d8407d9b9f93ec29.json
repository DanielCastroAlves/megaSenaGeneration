{"ast":null,"code":"var _jsxFileName = \"/home/daniel/megaSenaGeneration/megasena-generation/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [numbers, setNumbers] = useState([]);\n  const generateNumbers = () => {\n    let generatedNumbers = [];\n    while (generatedNumbers.length < 6) {\n      let randomNumber = Math.floor(Math.random() * 60) + 1;\n      if (!generatedNumbers.includes(randomNumber)) {\n        generatedNumbers.push(randomNumber);\n      }\n    }\n    setNumbers(generatedNumbers.sort((a, b) => a - b));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gerador de n\\xFAmeros para Mega-Sena\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateNumbers,\n      children: \"Gerar n\\xFAmeros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbers\",\n      children: numbers.map(number => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"twSmzLoLFYr+nV3+yczLvemrYnE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","numbers","setNumbers","generateNumbers","generatedNumbers","length","randomNumber","Math","floor","random","includes","push","sort","a","b","map","number"],"sources":["/home/daniel/megaSenaGeneration/megasena-generation/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst App = () => {\n  const [numbers, setNumbers] = useState([]);\n\n  const generateNumbers = () => {\n    let generatedNumbers = [];\n    while (generatedNumbers.length < 6) {\n      let randomNumber = Math.floor(Math.random() * 60) + 1;\n      if (!generatedNumbers.includes(randomNumber)) {\n        generatedNumbers.push(randomNumber);\n      }\n    }\n    setNumbers(generatedNumbers.sort((a, b) => a - b));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Gerador de números para Mega-Sena</h1>\n      <button onClick={generateNumbers}>Gerar números</button>\n      <div className=\"numbers\">\n        {numbers.map((number) => (\n          <span key={number}>{number}</span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMI,eAAe,GAAG,MAAM;IAC5B,IAAIC,gBAAgB,GAAG,EAAE;IACzB,OAAOA,gBAAgB,CAACC,MAAM,GAAG,CAAC,EAAE;MAClC,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;MACrD,IAAI,CAACL,gBAAgB,CAACM,QAAQ,CAACJ,YAAY,CAAC,EAAE;QAC5CF,gBAAgB,CAACO,IAAI,CAACL,YAAY,CAAC;MACrC;IACF;IACAJ,UAAU,CAACE,gBAAgB,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA,UAAI;IAAiC;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1C;MAAQ,OAAO,EAAEX,eAAgB;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eACxD;MAAK,SAAS,EAAC,SAAS;MAAA,UACrBF,OAAO,CAACc,GAAG,CAAEC,MAAM,iBAClB;QAAA,UAAoBA;MAAM,GAAfA,MAAM;QAAA;QAAA;QAAA;MAAA,QAClB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAzBIhB,GAAG;AAAA,KAAHA,GAAG;AA2BT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}